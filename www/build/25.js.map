{"version":3,"sources":["../../src/pages/camerascan/camerascan.module.ts","../../node_modules/@ionic-native/barcode-scanner/index.js","../../src/pages/camerascan/camerascan.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACF;AACiB;AAa/D;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAXhC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,mEAAc;aACf;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,mEAAc,CAAC;aACzC;YACD,SAAS,EAAE;gBACT,qFAAc;aACf;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;AChBjC;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,IAAI;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,IAAI;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACO;AAC1B,iC;;;;;;;;;;;;;;;;;;;;;AC5J0C;AAC4C;AAC7B;AAQzD;IAKE,wBAAmB,OAAsB,EAAS,SAAoB,EAAS,OAAuB;QAAnF,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,YAAO,GAAP,OAAO,CAAgB;QAHtG,eAAU,GAAW,EAAE,CAAC;QACxB,gBAAW,GAAQ,EAAE,CAAC;IAGtB,CAAC;IAED,6BAAI,GAAJ;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,GAAG;YACb,MAAM,EAAE,wCAAwC;SACjD,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC5B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IACD,wCAAe,GAAf;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IArBU,cAAc;QAL1B,gEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;WACG;SAC/B,CAAC;uBAOsG;OAL3F,cAAc,CAsB1B;IAAD,CAAC;AAAA;SAtBY,cAAc,e","file":"25.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CamerascanPage } from './camerascan';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\n@NgModule({\n  declarations: [\n    CamerascanPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(CamerascanPage),\n  ],\n  providers: [\n    BarcodeScanner,\n  ]\n})\nexport class CamerascanPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/camerascan/camerascan.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Barcode Scanner\n * @description\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n *\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n *\n * @usage\n * ```typescript\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n *\n * constructor(private barcodeScanner: BarcodeScanner) { }\n *\n * ...\n *\n *\n * this.barcodeScanner.scan().then(barcodeData => {\n *  console.log('Barcode data', barcodeData);\n * }).catch(err => {\n * \tconsole.log('Error', err);\n * });\n * ```\n * @interfaces\n * BarcodeScannerOptions\n * BarcodeScanResult\n */\nvar BarcodeScanner = (function (_super) {\n    __extends(BarcodeScanner, _super);\n    function BarcodeScanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Encode = {\n            TEXT_TYPE: 'TEXT_TYPE',\n            EMAIL_TYPE: 'EMAIL_TYPE',\n            PHONE_TYPE: 'PHONE_TYPE',\n            SMS_TYPE: 'SMS_TYPE'\n        };\n        return _this;\n    }\n    /**\n     * Open the barcode scanner.\n     * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n    /**\n       * Open the barcode scanner.\n       * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n       * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n       */\n    BarcodeScanner.prototype.scan = /**\n       * Open the barcode scanner.\n       * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n       * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param {string} type Type of encoding\n     * @param {any} data Data to encode\n     * @returns {Promise<any>}\n     */\n    /**\n       * Encodes data into a barcode.\n       * NOTE: not well supported on Android\n       * @param {string} type Type of encoding\n       * @param {any} data Data to encode\n       * @returns {Promise<any>}\n       */\n    BarcodeScanner.prototype.encode = /**\n       * Encodes data into a barcode.\n       * NOTE: not well supported on Android\n       * @param {string} type Type of encoding\n       * @param {any} data Data to encode\n       * @returns {Promise<any>}\n       */\n    function (type, data) {\n        return;\n    };\n    BarcodeScanner.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"scan\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"encode\", null);\n    /**\n     * @name Barcode Scanner\n     * @description\n     * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n     *\n     * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n     *\n     * @usage\n     * ```typescript\n     * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n     *\n     * constructor(private barcodeScanner: BarcodeScanner) { }\n     *\n     * ...\n     *\n     *\n     * this.barcodeScanner.scan().then(barcodeData => {\n     *  console.log('Barcode data', barcodeData);\n     * }).catch(err => {\n     * \tconsole.log('Error', err);\n     * });\n     * ```\n     * @interfaces\n     * BarcodeScannerOptions\n     * BarcodeScanResult\n     */\n    BarcodeScanner = __decorate([\n        Plugin({\n            pluginName: 'BarcodeScanner',\n            plugin: 'phonegap-plugin-barcodescanner',\n            pluginRef: 'cordova.plugins.barcodeScanner',\n            repo: 'https://github.com/phonegap/phonegap-plugin-barcodescanner',\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'Windows']\n        })\n    ], BarcodeScanner);\n    return BarcodeScanner;\n}(IonicNativePlugin));\nexport { BarcodeScanner };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/barcode-scanner/index.js\n// module id = 786\n// module chunks = 25","import { Component } from '@angular/core';\nimport { BarcodeScannerOptions, BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-camerascan',\n  templateUrl: 'camerascan.html',\n})\n\nexport class CamerascanPage {\n  options: BarcodeScannerOptions;\n  textoFinal: string = '';\n  scannedData: any = {};\n  platform: any;\n  constructor(public navCtrl: NavController, public navParams: NavParams, public scanner: BarcodeScanner) {\n  }\n\n  scan() {\n    this.options = {\n      prompt: 'Escaneie o seu c√≥digo de barras ou QR.'\n    };\n    this.scanner.scan().then((data) => {\n      this.scannedData = data;\n      console.log(this.scannedData);\n    }, (err) => {\n      console.log('Erro :', err);\n    })\n  }\n  ionViewDidEnter() {\n    this.scan();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/camerascan/camerascan.ts"],"sourceRoot":""}