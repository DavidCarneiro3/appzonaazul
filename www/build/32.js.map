{"version":3,"sources":["../../src/pages/recovery-password/recovery-password.module.ts","../../src/pages/recovery-password/recovery-password.ts"],"names":[],"mappings":"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","file":"32.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RecoveryPasswordPage } from './recovery-password';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecoveryPasswordPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RecoveryPasswordPage),\r\n  ],\r\n})\r\nexport class RecoveryPasswordPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recovery-password/recovery-password.module.ts","import { Component } from '@angular/core';\r\nimport {\r\n    AlertController,\r\n    IonicPage,\r\n    Loading,\r\n    LoadingController,\r\n    MenuController,\r\n    NavController,\r\n    NavParams\r\n} from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { AuthProvider } from \"../../providers/auth/auth\";\r\nimport { UserProvider } from \"../../providers/user/user\";\r\n\r\nimport { Constants } from \"../../environments/constants\";\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-recovery-password',\r\n    templateUrl: 'recovery-password.html',\r\n})\r\nexport class RecoveryPasswordPage {\r\n\r\n    public recoveryForm: FormGroup;\r\n    submitAttempt: boolean = false;\r\n\r\n    constructor(\r\n        public navCtrl: NavController,\r\n        public navParams: NavParams,\r\n        public menu: MenuController,\r\n        public alertCtrl: AlertController,\r\n        public loadingCtrl: LoadingController,\r\n        public formBuilder: FormBuilder,\r\n        private authProvider: AuthProvider,\r\n        private userProvider: UserProvider) {\r\n\r\n        const emailRegex = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n\r\n        this.recoveryForm = formBuilder.group({\r\n            email: ['', Validators.compose([Validators.required, Validators.pattern(emailRegex)])]\r\n        });\r\n    }\r\n\r\n    ionViewCanEnter() {\r\n        this.setVisibleMenu(false);\r\n        this.userProvider.getUserLocal().then(userID => {\r\n            if (!userID) {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n    }\r\n\r\n    ionViewWillLeave() {\r\n    }\r\n\r\n    recovery() {\r\n        this.submitAttempt = true;\r\n\r\n        if (this.isValidAttributes()) {\r\n            let loading: Loading = this.showLoading();\r\n            loading.present();\r\n\r\n            this.authProvider.sendPasswordResetEmail(this.recoveryForm.value.email)\r\n                .then(() => {\r\n                    loading.dismiss();\r\n                    this.showAlert('Sucesso!', 'Você receberá um email com instruções para recuperar sua senha.', '', () => {\r\n                        this.navCtrl.setRoot(Constants.LOGIN_PAGE.name);\r\n                    });\r\n\r\n                }).catch(error => {\r\n                    loading.dismiss();\r\n\r\n                    let errorMessage = 'Não foi possível restaurar sua senha!';\r\n\r\n                    if (error['code'] && error['code'] == 'auth/user-not-found') {\r\n                        errorMessage = 'O usuário não está cadastrado!';\r\n                    }\r\n\r\n                    this.showAlert(\"Erro!\", errorMessage, \"error\", () => {\r\n                    });\r\n                });\r\n\r\n        } else {\r\n            const warn = 'Insira um email válido para recuperar sua senha!';\r\n            this.showAlert(\"Aviso\", warn, \"info\", () => {\r\n            });\r\n        }\r\n    }\r\n\r\n    isValidAttributes(): Boolean {\r\n        return this.recoveryForm.valid;\r\n    }\r\n\r\n    showAlert(title: string, msg: string, type: string, callback) {\r\n        let alert = this.alertCtrl.create({\r\n            title: title,\r\n            message: msg,\r\n            cssClass: type,\r\n            buttons: [\r\n                {\r\n                    text: 'OK',\r\n                    cssClass: 'btn-ok',\r\n                    handler: data => {\r\n                        callback();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        alert.present();\r\n    }\r\n\r\n    setVisibleMenu(status = false) {\r\n        this.menu.enable(status);\r\n        this.menu.swipeEnable(status);\r\n    }\r\n\r\n    showLogin() {\r\n        this.navCtrl.setRoot(Constants.LOGIN_PAGE.name);\r\n    }\r\n\r\n    private showLoading(): Loading {\r\n        return this.loadingCtrl.create({ content: 'Aguarde...' });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recovery-password/recovery-password.ts"],"sourceRoot":""}